generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String?
  role      Role     @default(USER)
  profile   Profile? // –°–≤—è–∑—å –æ–¥–∏–Ω –∫ –æ–¥–Ω–æ–º—É —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
  pushSubscriptions     PushSubscription[]
  scheduledNotifications ScheduledNotification[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Profile {
  id     String @id @default(uuid())
  userId String @unique // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π, —á—Ç–æ–±—ã –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = –æ–¥–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  firstName String    @map("first_name")
  lastName  String    @map("last_name")
  avatar    String?   @default("/icons/default-avatar.png")
  bio       String // –î–ª—è –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
  gender    String?
  birthDate DateTime? @map("birth_date")
  phone     String?

  // –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
  country String?
  city    String?
  address String?

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
  isPublic Boolean @default(true) @map("is_public") // –ü—É–±–ª–∏—á–Ω—ã–π/–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
  timezone String? @default("UTC") // –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  language String? @default("ru") // –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
  totalHabits     Int @default(0) @map("total_habits")
  completedHabits Int @default(0) @map("completed_habits")
  currentStreak   Int @default(0) @map("current_streak")
  longestStreak   Int @default(0) @map("longest_streak")

  // –°–≤—è–∑–∏
  habits  Habit[]
  socials Social[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("profiles")
}

model Social {
  id        String  @id @default(uuid())
  profileId String  @map("profile_id")
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  platform SocialType // –¢–∏–ø —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
  url      String // –°—Å—ã–ª–∫–∞
  username String? // Username (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  isPublic Boolean    @default(true) @map("is_public")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("socials")
}

model Habit {
  id        String  @id @default(uuid())
  profileId String  @map("profile_id")
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–≤—ã—á–∫–µ
  title       String
  description String?
  icon        String? @default("üéØ") // –≠–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞
  color       String? @default("#3B82F6") // –¶–≤–µ—Ç –¥–ª—è UI

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤—ã—á–∫–∏
  frequency   Frequency @default(DAILY) // –ß–∞—Å—Ç–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  targetValue Int?      @map("target_value") // –¶–µ–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 –æ—Ç–∂–∏–º–∞–Ω–∏–π)
  unit        String? // –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è (—Ä–∞–∑, –º–∏–Ω—É—Ç, –∫–º –∏ —Ç.–¥.)

  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  reminderTime String?   @map("reminder_time") // –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
  startDate    DateTime  @default(now()) @map("start_date")
  endDate      DateTime? @map("end_date") // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫

  // –°—Ç–∞—Ç—É—Å
  isActive   Boolean @default(true) @map("is_active")
  isArchived Boolean @default(false) @map("is_archived")

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  currentStreak Int @default(0) @map("current_streak")
  longestStreak Int @default(0) @map("longest_streak")
  totalEntries  Int @default(0) @map("total_entries")

  // –°–≤—è–∑–∏
  entries HabitEntry[]
  scheduledNotifications ScheduledNotification[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("habits")
}

model HabitEntry {
  id      String @id @default(uuid())
  habitId String @map("habit_id")
  habit   Habit  @relation(fields: [habitId], references: [id], onDelete: Cascade)

  // –î–∞–Ω–Ω—ã–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
  date  DateTime // –î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  value Int? // –ó–Ω–∞—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –ø—Ä–∏–≤—ã—á–∫–∞ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–º)
  note  String? // –ó–∞–º–µ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  mood  Mood? // –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏

  // –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
  isCompleted        Boolean @default(false) @map("is_completed") // –í—ã–ø–æ–ª–Ω–µ–Ω–∞ –ª–∏ —Ü–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é
  progressPercentage Float   @default(0) @map("progress_percentage") // –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (0-100)

  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([habitId, date]) // –û–¥–Ω–∞ –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–≤—ã—á–∫—É –≤ –¥–µ–Ω—å
  @@map("habit_entries")
}

enum Role {
  USER
  ADMIN
}

enum SocialType {
  TELEGRAM
  VK
  INSTAGRAM
  TWITTER
  YOUTUBE
  LINKEDIN
  GITHUB
  TIKTOK
  WEBSITE
  OTHER
}

enum Frequency {
  DAILY // –ï–∂–µ–¥–Ω–µ–≤–Ω–æ
  WEEKLY // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ  
  MONTHLY // –ï–∂–µ–º–µ—Å—è—á–Ω–æ
  CUSTOM // –ö–∞—Å—Ç–æ–º–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞
}

enum Mood {
  TERRIBLE // üòû
  BAD // üòî  
  NEUTRAL // üòê
  GOOD // üôÇ
  EXCELLENT // üòÉ
}

model PushSubscription {
  id       String @id @default(uuid())
  userId   String @map("user_id")
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Push subscription –¥–∞–Ω–Ω—ã–µ
  endpoint String
  p256dh   String // –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
  auth     String // –ö–ª—é—á –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  isActive          Boolean @default(true) @map("is_active")
  habitReminders    Boolean @default(true) @map("habit_reminders")    // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö
  streakBreaking    Boolean @default(true) @map("streak_breaking")    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–∞–∑—Ä—ã–≤–µ streak
  achievements      Boolean @default(true) @map("achievements")       // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  weeklyReports     Boolean @default(false) @map("weekly_reports")    // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã

  // –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
  reminderTime String? @default("09:00") @map("reminder_time") // –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId, endpoint]) // –û–¥–∏–Ω endpoint –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  @@map("push_subscriptions")
}

model ScheduledNotification {
  id             String   @id @default(uuid())
  userId         String   @map("user_id") 
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  habitId        String?  @map("habit_id")
  habit          Habit?   @relation(fields: [habitId], references: [id], onDelete: Cascade)

  // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  title          String
  body           String
  type           NotificationType
  
  // –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
  scheduledAt    DateTime @map("scheduled_at")
  sentAt         DateTime? @map("sent_at")
  
  // –°—Ç–∞—Ç—É—Å
  status         NotificationStatus @default(PENDING)
  attempts       Int      @default(0)
  lastError      String?  @map("last_error")

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  data           String?  // JSON —Å—Ç—Ä–æ–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("scheduled_notifications")
}

enum NotificationType {
  HABIT_REMINDER     // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏–≤—ã—á–∫–µ
  STREAK_BREAKING    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ä–∞–∑—Ä—ã–≤–µ streak
  ACHIEVEMENT        // –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
  WEEKLY_REPORT      // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
  CUSTOM             // –ö–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
}

enum NotificationStatus {
  PENDING    // –û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
  SENT       // –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
  FAILED     // –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
  CANCELLED  // –û—Ç–º–µ–Ω–µ–Ω–æ
}
