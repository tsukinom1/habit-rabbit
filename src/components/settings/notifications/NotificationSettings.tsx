'use client'
import { useState } from 'react'
import { usePushNotifications } from '@/hooks/usePushNotifications'
import MyButton from '@/components/ui/MyButton'
import MyToggle from '@/components/ui/MyToggle'
import MyInput from '@/components/ui/MyInput'
import { FaBell, FaBellSlash, FaChevronDown, FaChevronUp } from 'react-icons/fa'
import { notify } from '@/hooks/useNotification'

export default function NotificationSettings() {
  const {
    isSupported,
    isSubscribed,
    isLoading,
    settings,
    subscribe,
    unsubscribe,
    updateSettings,
  } = usePushNotifications()
  
  const [isExpanded, setIsExpanded] = useState(false)

  const handleToggleNotifications = async () => {
    try {
      if (isSubscribed) {
        await unsubscribe()
        notify.success('üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã')
      } else {
        await subscribe()
        notify.success('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!')
      }
    } catch (error) {
      console.error('Error toggling notifications:', error)
      notify.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
    }
  }

  const handleSettingChange = async (key: keyof typeof settings, value: boolean | string) => {
    try {
      await updateSettings({ [key]: value })
      notify.success('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
    } catch (error) {
      console.error('Error updating settings:', error)
      notify.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫')
    }
  }



  if (!isSupported) {
    return (
      <div className="bg-white rounded-lg shadow-sm border p-4">
        <div className="flex items-center gap-3 text-gray-500">
          <FaBellSlash className="w-5 h-5" />
          <div>
            <h3 className="font-medium">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</h3>
            <p className="text-sm">–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="bg-white rounded-lg shadow-sm border">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="p-4 border-b">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            {isSubscribed ? (
              <FaBell className="w-5 h-5 text-blue-500" />
            ) : (
              <FaBellSlash className="w-5 h-5 text-gray-400" />
            )}
            <div>
              <h3 className="font-medium">Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
              <p className="text-sm text-gray-500">
                {isSubscribed ? '–í–∫–ª—é—á–µ–Ω—ã' : '–û—Ç–∫–ª—é—á–µ–Ω—ã'}
              </p>
            </div>
          </div>
          
          <div className="flex items-center gap-2">
            {isSubscribed && (
              <MyButton
                type="button"
                onClick={() => setIsExpanded(!isExpanded)}
                className="text-xs px-2 py-1 bg-gray-50 text-gray-600 hover:bg-gray-100"
              >
                {isExpanded ? <FaChevronUp className="w-3 h-3" /> : <FaChevronDown className="w-3 h-3" />}
              </MyButton>
            )}
            
            <MyButton
              type="button"
              onClick={handleToggleNotifications}
              className={`text-sm px-3 py-1 ${
                isSubscribed 
                  ? 'bg-red-50 text-red-600 hover:bg-red-100' 
                  : 'bg-blue-50 text-blue-600 hover:bg-blue-100'
              }`}
            >
              {isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : isSubscribed ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}
            </MyButton>
          </div>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      {isSubscribed && isExpanded && (
        <div className="p-4 space-y-4">
          {/* –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="font-medium text-sm flex items-center gap-2">
                  <span role="img" aria-label="sunrise">üåÖ</span> –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                </h4>
                <p className="text-xs text-gray-500">–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ</p>
              </div>
              <MyToggle
                checked={settings.dailyGreeting}
                onChange={(e) => handleSettingChange('dailyGreeting', e.target.checked)}
              />
            </div>
            
            {settings.dailyGreeting && (
              <div className="ml-6 space-y-2">
                <label className="text-xs text-gray-500">–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏</label>
                <MyInput
                  type="time"
                  value={settings.greetingTime}
                  onChange={(e) => handleSettingChange('greetingTime', e.target.value)}
                  className="w-32"
                />
              </div>
            )}
          </div>

          {/* –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö */}
          <div className="flex items-center justify-between">
            <div>
              <h4 className="font-medium text-sm flex items-center gap-2">
                <span role="img" aria-label="alarm">‚è∞</span> –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö
              </h4>
              <p className="text-xs text-gray-500">–ü–æ –≤—Ä–µ–º–µ–Ω–∏, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –¥–ª—è –∫–∞–∂–¥–æ–π –ø—Ä–∏–≤—ã—á–∫–∏</p>
            </div>
            <MyToggle
              checked={settings.habitReminders}
              onChange={(e) => handleSettingChange('habitReminders', e.target.checked)}
            />
          </div>

          {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ streak */}
          <div className="flex items-center justify-between">
            <div>
              <h4 className="font-medium text-sm flex items-center gap-2">
                <span role="img" aria-label="fire">üî•</span> –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ streak
              </h4>
              <p className="text-xs text-gray-500">–ö–æ–≥–¥–∞ –µ—Å—Ç—å —Ä–∏—Å–∫ –ø–æ—Ç–µ—Ä—è—Ç—å —Å–µ—Ä–∏—é (–≤–µ—á–µ—Ä–æ–º 18:00-22:00)</p>
            </div>
            <MyToggle
              checked={settings.streakWarnings}
              onChange={(e) => handleSettingChange('streakWarnings', e.target.checked)}
            />
          </div>

          {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
          <div className="flex items-center justify-between">
            <div>
              <h4 className="font-medium text-sm flex items-center gap-2">
                <span role="img" aria-label="trophy">üèÜ</span> –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
              </h4>
              <p className="text-xs text-gray-500">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö milestone (3, 7, 21, 30, 100+ –¥–Ω–µ–π)</p>
            </div>
            <MyToggle
              checked={settings.achievements}
              onChange={(e) => handleSettingChange('achievements', e.target.checked)}
            />
          </div>

          {/* –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞ */}
          <div className="flex items-center justify-between">
            <div>
              <h4 className="font-medium text-sm flex items-center gap-2">
                <span role="img" aria-label="chart">üìä</span> –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
              </h4>
              <p className="text-xs text-gray-500">–û—Ç—á–µ—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º</p>
            </div>
            <MyToggle
              checked={settings.weeklySummary}
              onChange={(e) => handleSettingChange('weeklySummary', e.target.checked)}
            />
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          {/* <div className="pt-3 border-t space-y-2">
            <div className="text-xs text-gray-500">
              <p className="font-medium mb-1">üí° –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</p>
              <ul className="space-y-1 ml-4">
                <li>‚Ä¢ –û—Ç–º–µ—á–∞–π –ø—Ä–∏–≤—ã—á–∫–∏ –ø—Ä—è–º–æ –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</li>
                <li>‚Ä¢ –û—Ç–∫–ª–∞–¥—ã–≤–∞–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞ —á–∞—Å</li>
                <li>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é</li>
                <li>‚Ä¢ –£–º–Ω—ã–µ streak –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</li>
              </ul>
            </div>
            
            <div className="flex items-center gap-2 mt-2">
              <span className="text-xs text-gray-400">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span>
              <span className="text-xs text-gray-500">{new Date().toLocaleTimeString()}</span>
            </div>
          </div> */}
        </div>
      )}

      {/* –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      {isSubscribed && !isExpanded && (
        <div className="p-4 text-sm text-gray-600">
          <div className="flex items-center justify-between">
            <p><span role="img" aria-label="check">‚úÖ</span> –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–∞</p>
            <button 
              type="button"
              onClick={() => setIsExpanded(true)}
              className="text-blue-500 hover:text-blue-600 text-xs"
            >
              –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ ‚Üí
            </button>
          </div>
        </div>
      )}
    </div>
  )
} 